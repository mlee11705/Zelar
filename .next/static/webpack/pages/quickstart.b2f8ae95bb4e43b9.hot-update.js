"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/quickstart",{

/***/ "./src/pages/quickstart.mdx":
/*!**********************************!*\
  !*** ./src/pages/quickstart.mdx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__N_SSG\": function() { return /* binding */ __N_SSG; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mdx-js/react */ \"./node_modules/@mdx-js/react/index.js\");\n/*@jsxRuntime automatic @jsxImportSource react*/ \n\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        p: \"p\",\n        a: \"a\",\n        h2: \"h2\",\n        pre: \"pre\",\n        code: \"code\",\n        ul: \"ul\",\n        li: \"li\"\n    }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(), props.components), { Note , CodeGroup , Button  } = _components;\n    if (!Button) _missingMdxReference(\"Button\", true, \"42:3-47:5\");\n    if (!CodeGroup) _missingMdxReference(\"CodeGroup\", true, \"17:1-39:13\");\n    if (!Note) _missingMdxReference(\"Note\", true, \"8:1-11:8\");\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h1, {\n                children: \"Quickstart\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                children: \"This guide will get you all set up and ready to use the Protocol API. We'll cover how to get started using one of our API clients and how to make your first API request. We'll also look at where to go next to find all the information you need to take full advantage of our powerful REST API.\",\n                ...{\n                    className: \"lead\"\n                }\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Note, {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.p, {\n                    children: [\n                        \"Before you can make requests to the Protocol API, you will need to grab your\\nAPI key from your dashboard. You find it under \",\n                        (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n                            href: \"#\",\n                            children: \"Settings \\xbb API\"\n                        }),\n                        \".\"\n                    ]\n                })\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h2, {\n                id: \"celito-tech\",\n                children: \"Celito Tech\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                children: \"Before making your first API request, you need to pick which API client you will use. In addition to good ol' cURL HTTP requests, Protocol offers clients for JavaScript, Python, and PHP. In the following example, you can see how to install each client.\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(CodeGroup, {\n                children: [\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                        language: \"bash\",\n                        code: \"# cURL is most likely already installed on your machine\\ncurl --version\\n\",\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                            className: \"language-bash\",\n                            children: '<span><span style=\"color: var(--shiki-token-comment)\"># cURL is most likely already installed on your machine</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">curl --version</span></span>\\n<span></span>'\n                        }),\n                        ...{\n                            title: \"cURL\"\n                        }\n                    }),\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                        language: \"bash\",\n                        code: \"# Install the Protocol JavaScript SDK\\nnpm install @example/protocol-api --save\\n\",\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                            className: \"language-bash\",\n                            children: '<span><span style=\"color: var(--shiki-token-comment)\"># Install the Protocol JavaScript SDK</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">npm install @example/protocol-api --save</span></span>\\n<span></span>'\n                        }),\n                        ...{\n                            language: \"js\"\n                        }\n                    }),\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                        language: \"bash\",\n                        code: \"# Install the Protocol Python SDK\\npip install protocol_api\\n\",\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                            className: \"language-bash\",\n                            children: '<span><span style=\"color: var(--shiki-token-comment)\"># Install the Protocol Python SDK</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">pip install protocol_api</span></span>\\n<span></span>'\n                        }),\n                        ...{\n                            language: \"python\"\n                        }\n                    }),\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                        language: \"bash\",\n                        code: \"# Install the Protocol PHP SDK\\ncomposer require protocol/sdk\\n\",\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                            className: \"language-bash\",\n                            children: '<span><span style=\"color: var(--shiki-token-comment)\"># Install the Protocol PHP SDK</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">composer require protocol/sdk</span></span>\\n<span></span>'\n                        }),\n                        ...{\n                            language: \"php\"\n                        }\n                    })\n                ]\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                className: \"not-prose\",\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Button, {\n                    href: \"/sdks\",\n                    variant: \"text\",\n                    arrow: \"right\",\n                    children: \"Check out our list of first-party SDKs\"\n                })\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h2, {\n                id: \"wildcraft\",\n                children: \"Wildcraft\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                children: \"After picking your preferred client, you are ready to make your first call to the Protocol API. Below, you can see how to send a GET request to the Conversations endpoint to get a list of all your conversations. In the cURL example, results are limited to ten conversations, the default page length for each client.\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(CodeGroup, {\n                tag: \"GET\",\n                label: \"/v1/conversations\",\n                children: [\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                        language: \"bash\",\n                        code: 'curl -G https://api.protocol.chat/v1/conversations \\\\\\n  -H \"Authorization: Bearer {token}\" \\\\\\n  -d limit=10\\n',\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                            className: \"language-bash\",\n                            children: '<span><span style=\"color: var(--shiki-color-text)\">curl -G https://api.protocol.chat/v1/conversations \\\\</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  -H </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;Authorization: Bearer {token}&quot;</span><span style=\"color: var(--shiki-color-text)\"> \\\\</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  -d limit=10</span></span>\\n<span></span>'\n                        }),\n                        ...{\n                            title: \"cURL\"\n                        }\n                    }),\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                        language: \"js\",\n                        code: \"import ApiClient from '@example/protocol-api'\\n\\nconst client = new ApiClient(token)\\n\\nawait client.conversations.list()\\n\",\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                            className: \"language-js\",\n                            children: '<span><span style=\"color: var(--shiki-token-keyword)\">import</span><span style=\"color: var(--shiki-color-text)\"> ApiClient </span><span style=\"color: var(--shiki-token-keyword)\">from</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&#39;@example/protocol-api&#39;</span></span>\\n<span></span>\\n<span><span style=\"color: var(--shiki-token-keyword)\">const</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">client</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-keyword)\">=</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-keyword)\">new</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-function)\">ApiClient</span><span style=\"color: var(--shiki-color-text)\">(token)</span></span>\\n<span></span>\\n<span><span style=\"color: var(--shiki-token-keyword)\">await</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">client</span><span style=\"color: var(--shiki-token-function)\">.</span><span style=\"color: var(--shiki-token-constant)\">conversations</span><span style=\"color: var(--shiki-token-function)\">.list</span><span style=\"color: var(--shiki-color-text)\">()</span></span>\\n<span></span>'\n                        })\n                    }),\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                        language: \"python\",\n                        code: \"from protocol_api import ApiClient\\n\\nclient = ApiClient(token)\\n\\nclient.conversations.list()\\n\",\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                            className: \"language-python\",\n                            children: '<span><span style=\"color: var(--shiki-token-keyword)\">from</span><span style=\"color: var(--shiki-color-text)\"> protocol_api </span><span style=\"color: var(--shiki-token-keyword)\">import</span><span style=\"color: var(--shiki-color-text)\"> ApiClient</span></span>\\n<span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">client </span><span style=\"color: var(--shiki-token-keyword)\">=</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-function)\">ApiClient</span><span style=\"color: var(--shiki-token-punctuation)\">(token)</span></span>\\n<span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">client</span><span style=\"color: var(--shiki-token-punctuation)\">.</span><span style=\"color: var(--shiki-color-text)\">conversations</span><span style=\"color: var(--shiki-token-punctuation)\">.</span><span style=\"color: var(--shiki-token-function)\">list</span><span style=\"color: var(--shiki-token-punctuation)\">()</span></span>\\n<span></span>'\n                        })\n                    }),\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                        language: \"php\",\n                        code: \"$client = new \\\\Protocol\\\\ApiClient($token);\\n\\n$client->conversations->list();\\n\",\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                            className: \"language-php\",\n                            children: '<span><span style=\"color: var(--shiki-color-text)\">$client </span><span style=\"color: var(--shiki-token-keyword)\">=</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-keyword)\">new</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-punctuation)\">\\\\</span><span style=\"color: var(--shiki-token-constant)\">Protocol</span><span style=\"color: var(--shiki-token-punctuation)\">\\\\</span><span style=\"color: var(--shiki-token-constant)\">ApiClient</span><span style=\"color: var(--shiki-color-text)\">($token);</span></span>\\n<span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">$client</span><span style=\"color: var(--shiki-token-keyword)\">-&gt;</span><span style=\"color: var(--shiki-color-text)\">conversations</span><span style=\"color: var(--shiki-token-keyword)\">-&gt;</span><span style=\"color: var(--shiki-token-function)\">list</span><span style=\"color: var(--shiki-token-punctuation)\">()</span><span style=\"color: var(--shiki-color-text)\">;</span></span>\\n<span></span>'\n                        })\n                    })\n                ]\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                className: \"not-prose\",\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Button, {\n                    href: \"/conversations\",\n                    variant: \"text\",\n                    arrow: \"right\",\n                    children: \"Read the docs for the Conversations endpoint\"\n                })\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h2, {\n                id: \"square-yards\",\n                children: \"Square Yards\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                children: \"Great, you're now set up with an API client and have made your first request to the API. Here are a few links that might be handy as you venture further into the Protocol API:\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.ul, {\n                children: [\n                    \"\\n\",\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.li, {\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n                            href: \"#\",\n                            children: \"Grab your API key from the Protocol dashboard\"\n                        })\n                    }),\n                    \"\\n\",\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.li, {\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n                            href: \"/conversations\",\n                            children: \"Check out the Conversations endpoint\"\n                        })\n                    }),\n                    \"\\n\",\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.li, {\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n                            href: \"/errors\",\n                            children: \"Learn about the different error messages in Protocol\"\n                        })\n                    }),\n                    \"\\n\"\n                ]\n            })\n        ]\n    });\n}\nfunction MDXContent() {\n    let props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const { wrapper: MDXLayout  } = Object.assign({}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(), props.components);\n    return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MDXLayout, Object.assign({}, props, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_createMdxContent, props)\n    })) : _createMdxContent(props);\n}\n_c = MDXContent;\nvar __N_SSG = true;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MDXContent);\nfunction _missingMdxReference(id, component, place) {\n    throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"` in `/Users/mike/Projects/tailwindui-protocol/Zelar/src/pages/quickstart.mdx`\" : \"\"));\n}\nvar _c;\n$RefreshReg$(_c, \"MDXContent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvcXVpY2tzdGFydC5tZHguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBR0U7Ozs7MEJBRUY7Ozs7Ozs7Ozt3QkFHRTt3QkFBQUEsc0RBQUFBLENBQUFDLFlBQUFDLENBQUE7O3NDQUNnRDs7d0JBQXdCO3FCQUFBOzs7Ozs7MEJBR3ZFOzs7OzBCQUVIOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQW1DRzs7OzswQkFFSDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQTJDRzs7OzswQkFFSDs7Ozs7Ozs7O3NDQUVHOzs7Ozs7O3NDQUNBOzs7Ozs7O3NDQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9wYWdlcy9xdWlja3N0YXJ0Lm1keD9kZTM4Il0sIm5hbWVzIjpbIl9qc3giLCJfY29tcG9uZW50cyIsImEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/pages/quickstart.mdx\n"));

/***/ })

});