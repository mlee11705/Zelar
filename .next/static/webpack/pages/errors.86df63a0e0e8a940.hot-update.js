"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/errors",{

/***/ "./src/pages/errors.mdx":
/*!******************************!*\
  !*** ./src/pages/errors.mdx ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__N_SSG\": function() { return /* binding */ __N_SSG; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mdx-js/react */ \"./node_modules/@mdx-js/react/index.js\");\n/*@jsxRuntime automatic @jsxImportSource react*/ \n\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        p: \"p\",\n        hr: \"hr\",\n        h2: \"h2\",\n        em: \"em\",\n        pre: \"pre\",\n        code: \"code\"\n    }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(), props.components), { Note , Properties , Property , Row , Col  } = _components;\n    if (!Col) _missingMdxReference(\"Col\", true, \"40:3-55:9\");\n    if (!Note) _missingMdxReference(\"Note\", true, \"10:1-14:8\");\n    if (!Properties) _missingMdxReference(\"Properties\", true, \"22:1-33:14\");\n    if (!Property) _missingMdxReference(\"Property\", true, \"23:3-25:14\");\n    if (!Row) _missingMdxReference(\"Row\", true, \"39:1-67:7\");\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h1, {\n                children: \"Data Integration\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                children: \"In this guide, we will talk about what happens when something goes wrong while you work with the API. Mistakes happen, and mostly they will be yours, not ours. Let's look at some status codes and error types you might encounter.\",\n                ...{\n                    className: \"lead\"\n                }\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                children: \"You can tell if your request was successful by checking the status code when receiving an API response. If a response comes back unsuccessful, you can use the error type and error message to figure out what has gone wrong and do some rudimentary debugging (before contacting support).\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Note, {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                    children: \"Before reaching out to support with an error, please be aware that 99% of all\\nreported errors are, in fact, user errors. Therefore, please carefully check\\nyour code before contacting Protocol support.\"\n                })\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.hr, {}),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h2, {\n                id: \"status-codes\",\n                children: \"Status codes\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                children: \"Here is a list of the different categories of status codes returned by the Protocol API. Use these to understand if a request was successful.\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Properties, {\n                children: [\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                        name: \"2xx\",\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                            children: \"A 2xx status code indicates a successful response.\"\n                        })\n                    }),\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                        name: \"4xx\",\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.p, {\n                            children: [\n                                \"A 4xx status code indicates a client error — this means it's a \",\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.em, {\n                                    children: \"you\"\n                                }),\n                                \"\\nproblem.\"\n                            ]\n                        })\n                    }),\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                        name: \"5xx\",\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                            children: \"A 5xx status code indicates a server error — you won't be seeing these.\"\n                        })\n                    })\n                ]\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.hr, {}),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h2, {\n                id: \"error-types\",\n                children: \"Error types\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Row, {\n                children: [\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Col, {\n                        children: [\n                            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                children: \"Whenever a request is unsuccessful, the Protocol API will return an error response with an error type and message. You can use this information to understand better what has gone wrong and how to fix it. Most of the error messages are pretty helpful and actionable.\"\n                            }),\n                            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                children: \"Here is a list of the two error types supported by the Protocol API — use these to understand what you have done wrong.\"\n                            }),\n                            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Properties, {\n                                children: [\n                                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                        name: \"api_error\",\n                                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                            children: \"This means that we made an error, which is highly speculative and unlikely.\"\n                                        })\n                                    }),\n                                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                        name: \"invalid_request\",\n                                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                            children: \"This means that you made an error, which is much more likely.\"\n                                        })\n                                    })\n                                ]\n                            })\n                        ]\n                    }),\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Col, {\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                            language: \"bash\",\n                            code: '{\\n  \"type\": \"api_error\",\\n  \"message\": \"No way this is happening!?\",\\n  \"documentation_url\": \"https://protocol.chat/docs/errors/api_error\"\\n}\\n',\n                            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                                className: \"language-bash\",\n                                children: '<span><span style=\"color: var(--shiki-color-text)\">{</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;type&quot;</span><span style=\"color: var(--shiki-color-text)\">: </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;api_error&quot;</span><span style=\"color: var(--shiki-color-text)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;message&quot;</span><span style=\"color: var(--shiki-color-text)\">: </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;No way this is happening!?&quot;</span><span style=\"color: var(--shiki-color-text)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;documentation_url&quot;</span><span style=\"color: var(--shiki-color-text)\">: </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;https://protocol.chat/docs/errors/api_error&quot;</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">}</span></span>\\n<span></span>'\n                            }),\n                            ...{\n                                title: \"Error response\"\n                            }\n                        })\n                    })\n                ]\n            })\n        ]\n    });\n}\nfunction MDXContent() {\n    let props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const { wrapper: MDXLayout  } = Object.assign({}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(), props.components);\n    return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MDXLayout, Object.assign({}, props, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_createMdxContent, props)\n    })) : _createMdxContent(props);\n}\n_c = MDXContent;\nvar __N_SSG = true;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MDXContent);\nfunction _missingMdxReference(id, component, place) {\n    throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"` in `/Users/mike/Projects/tailwindui-protocol/Zelar/src/pages/errors.mdx`\" : \"\"));\n}\nvar _c;\n$RefreshReg$(_c, \"MDXContent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvZXJyb3JzLm1keC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBR0U7Ozs7MEJBRUY7Ozs7Ozs7MEJBRUE7Ozs7OzhCQUdFOzs7Ozs7OzswQkFPQzs7OzswQkFFSDs7Ozs7Ozs7c0NBSUk7Ozs7Ozs7Z0NBR0E7Z0NBQUFBLHNEQUFBQSxDQUFBQyxZQUFBQyxFQUFBOzhDQUFnRTs7Z0NBQUk7NkJBQUE7Ozs7OztzQ0FJcEU7Ozs7Ozs7Ozs7MEJBTUQ7Ozs7Ozs7OzBDQUtDOzs7MENBRUE7Ozs7Ozs7c0RBSUk7Ozs7OztzREFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcGFnZXMvZXJyb3JzLm1keD8zMTEyIl0sIm5hbWVzIjpbIl9qc3giLCJfY29tcG9uZW50cyIsImVtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/errors.mdx\n"));

/***/ })

});