"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/webhooks",{

/***/ "./src/pages/webhooks.mdx":
/*!********************************!*\
  !*** ./src/pages/webhooks.mdx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__N_SSG\": function() { return /* binding */ __N_SSG; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mdx-js/react */ \"./node_modules/@mdx-js/react/index.js\");\n/*@jsxRuntime automatic @jsxImportSource react*/ \n\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        p: \"p\",\n        h2: \"h2\",\n        a: \"a\",\n        code: \"code\",\n        pre: \"pre\",\n        hr: \"hr\"\n    }, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(), props.components), { Button , Row , Col , Properties , Property , CodeGroup  } = _components;\n    if (!Button) _missingMdxReference(\"Button\", true, \"32:3-37:5\");\n    if (!CodeGroup) _missingMdxReference(\"CodeGroup\", true, \"132:1-170:13\");\n    if (!Col) _missingMdxReference(\"Col\", true, \"45:3-95:9\");\n    if (!Properties) _missingMdxReference(\"Properties\", true, \"47:5-93:18\");\n    if (!Property) _missingMdxReference(\"Property\", true, \"48:7-50:18\");\n    if (!Row) _missingMdxReference(\"Row\", true, \"44:1-124:7\");\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h1, {\n                children: \"Product Engineering\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                children: \"In this guide, we will look at how to register and consume webhooks to integrate your app with Protocol. With webhooks, your app can know when something happens in Protocol, such as someone sending a message or adding a contact.\",\n                ...{\n                    className: \"lead\"\n                }\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h2, {\n                id: \"registering-webhooks\",\n                children: \"Registering webhooks\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.p, {\n                children: [\n                    \"To register a new webhook, you need to have a URL in your app that Protocol can call. You can configure a new webhook from the Protocol dashboard under \",\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n                        href: \"#\",\n                        children: \"API settings\"\n                    }),\n                    \". Give your webhook a name, pick the \",\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n                        href: \"#event-types\",\n                        children: \"events\"\n                    }),\n                    \" you want to listen for, and add your URL.\"\n                ]\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                children: \"Now, whenever something of interest happens in your app, a webhook is fired off by Protocol. In the next section, we'll look at how to consume webhooks.\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h2, {\n                id: \"consuming-webhooks\",\n                children: \"Consuming webhooks\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.p, {\n                children: [\n                    \"When your app receives a webhook request from Protocol, check the \",\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                        children: \"type\"\n                    }),\n                    \" attribute to see what event caused it. The first part of the event type will tell you the payload type, e.g., a conversation, message, etc.\"\n                ]\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                language: \"json\",\n                code: '{\\n  \"id\": \"a056V7R7NmNRjl70\",\\n  \"type\": \"conversation.updated\",\\n  \"payload\": {\\n    \"id\": \"WAz8eIbvDR60rouK\"\\n    // ...\\n  }\\n}\\n',\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                    className: \"language-json\",\n                    children: '<span><span style=\"color: var(--shiki-color-text)\">{</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-keyword)\">&quot;id&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;a056V7R7NmNRjl70&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-keyword)\">&quot;type&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;conversation.updated&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-keyword)\">&quot;payload&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> {</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-keyword)\">&quot;id&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;WAz8eIbvDR60rouK&quot;</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-comment)\">// ...</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  }</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">}</span></span>\\n<span></span>'\n                }),\n                ...{\n                    title: \"Example webhook payload\"\n                }\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.p, {\n                children: [\n                    \"In the example above, a conversation was \",\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                        children: \"updated\"\n                    }),\n                    \", and the payload type is a \",\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                        children: \"conversation\"\n                    }),\n                    \".\"\n                ]\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                className: \"not-prose\",\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Button, {\n                    href: \"#event-types\",\n                    variant: \"text\",\n                    arrow: \"right\",\n                    children: \"See all event types\"\n                })\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.hr, {}),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h2, {\n                id: \"event-types\",\n                children: \"Event types\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Row, {\n                children: [\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Col, {\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Properties, {\n                            children: [\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"contact.created\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"A new contact was created.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"contact.updated\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"An existing contact was updated.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"contact.deleted\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"A contact was successfully deleted.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"conversation.created\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"A new conversation was created.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"conversation.updated\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"An existing conversation was updated.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"conversation.deleted\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"A conversation was successfully deleted.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"message.created\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"A new message was created.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"message.updated\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"An existing message was updated.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"message.deleted\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"A message was successfully deleted.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"group.created\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"A new group was created.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"group.updated\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"An existing group was updated.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"group.deleted\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"A group was successfully deleted.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"attachment.created\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"A new attachment was created.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"attachment.updated\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"An existing attachment was updated.\"\n                                    })\n                                }),\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Property, {\n                                    name: \"attachment.deleted\",\n                                    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n                                        children: \"An attachment was successfully deleted.\"\n                                    })\n                                })\n                            ]\n                        })\n                    }),\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Col, {\n                        sticky: true,\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                            language: \"json\",\n                            code: '{\\n  \"id\": \"a056V7R7NmNRjl70\",\\n  \"type\": \"message.updated\",\\n  \"payload\": {\\n    \"id\": \"SIuAFUNKdSYHZF2w\",\\n    \"conversation_id\": \"xgQQXg3hrtjh7AvZ\",\\n    \"contact\": {\\n      \"id\": \"WAz8eIbvDR60rouK\",\\n      \"username\": \"KevinMcCallister\",\\n      \"phone_number\": \"1-800-759-3000\",\\n      \"avatar_url\": \"https://assets.protocol.chat/avatars/kevin.jpg\",\\n      \"last_active_at\": 705103200,\\n      \"created_at\": 692233200\\n    },\\n    \"message\": \"I’m traveling with my dad. He’s at a meeting. I hate meetings.\",\\n    \"reactions\": [],\\n    \"attachments\": [],\\n    \"read_at\": 705103200,\\n    \"created_at\": 692233200,\\n    \"updated_at\": 692233200\\n  }\\n}\\n',\n                            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                                className: \"language-json\",\n                                children: '<span><span style=\"color: var(--shiki-color-text)\">{</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-keyword)\">&quot;id&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;a056V7R7NmNRjl70&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-keyword)\">&quot;type&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;message.updated&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-keyword)\">&quot;payload&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> {</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-keyword)\">&quot;id&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;SIuAFUNKdSYHZF2w&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-keyword)\">&quot;conversation_id&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;xgQQXg3hrtjh7AvZ&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-keyword)\">&quot;contact&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> {</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">      </span><span style=\"color: var(--shiki-token-keyword)\">&quot;id&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;WAz8eIbvDR60rouK&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">      </span><span style=\"color: var(--shiki-token-keyword)\">&quot;username&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;KevinMcCallister&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">      </span><span style=\"color: var(--shiki-token-keyword)\">&quot;phone_number&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;1-800-759-3000&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">      </span><span style=\"color: var(--shiki-token-keyword)\">&quot;avatar_url&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;https://assets.protocol.chat/avatars/kevin.jpg&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">      </span><span style=\"color: var(--shiki-token-keyword)\">&quot;last_active_at&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">705103200</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">      </span><span style=\"color: var(--shiki-token-keyword)\">&quot;created_at&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">692233200</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    }</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-keyword)\">&quot;message&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;I’m traveling with my dad. He’s at a meeting. I hate meetings.&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-keyword)\">&quot;reactions&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> []</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-keyword)\">&quot;attachments&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> []</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-keyword)\">&quot;read_at&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">705103200</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-keyword)\">&quot;created_at&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">692233200</span><span style=\"color: var(--shiki-token-punctuation)\">,</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-keyword)\">&quot;updated_at&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">:</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">692233200</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  }</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">}</span></span>\\n<span></span>'\n                            }),\n                            ...{\n                                \"title\": \"Example payload\"\n                            }\n                        })\n                    })\n                ]\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.hr, {}),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h2, {\n                id: \"security\",\n                children: \"Security\"\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.p, {\n                children: [\n                    \"To know for sure that a webhook was, in fact, sent by Protocol instead of a malicious actor, you can verify the request signature. Each webhook request contains a header named \",\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                        children: \"x-protocol-signature\"\n                    }),\n                    \", and you can verify this signature by using your secret webhook key. The signature is an HMAC hash of the request payload hashed using your secret key. Here is an example of how to verify the signature in your app:\"\n                ]\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(CodeGroup, {\n                title: \"Verifying a request\",\n                children: [\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                        language: \"js\",\n                        code: \"const signature = req.headers['x-protocol-signature']\\nconst hash = crypto.createHmac('sha256', secret).update(payload).digest('hex')\\n\\nif (hash === signature) {\\n  // Request is verified\\n} else {\\n  // Request could not be verified\\n}\\n\",\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                            className: \"language-js\",\n                            children: '<span><span style=\"color: var(--shiki-token-keyword)\">const</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">signature</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-keyword)\">=</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">req</span><span style=\"color: var(--shiki-color-text)\">.headers[</span><span style=\"color: var(--shiki-token-string-expression)\">&#39;x-protocol-signature&#39;</span><span style=\"color: var(--shiki-color-text)\">]</span></span>\\n<span><span style=\"color: var(--shiki-token-keyword)\">const</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">hash</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-keyword)\">=</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">crypto</span><span style=\"color: var(--shiki-token-function)\">.createHmac</span><span style=\"color: var(--shiki-color-text)\">(</span><span style=\"color: var(--shiki-token-string-expression)\">&#39;sha256&#39;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span><span style=\"color: var(--shiki-color-text)\"> secret)</span><span style=\"color: var(--shiki-token-function)\">.update</span><span style=\"color: var(--shiki-color-text)\">(payload)</span><span style=\"color: var(--shiki-token-function)\">.digest</span><span style=\"color: var(--shiki-color-text)\">(</span><span style=\"color: var(--shiki-token-string-expression)\">&#39;hex&#39;</span><span style=\"color: var(--shiki-color-text)\">)</span></span>\\n<span></span>\\n<span><span style=\"color: var(--shiki-token-keyword)\">if</span><span style=\"color: var(--shiki-color-text)\"> (hash </span><span style=\"color: var(--shiki-token-keyword)\">===</span><span style=\"color: var(--shiki-color-text)\"> signature) {</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-comment)\">// Request is verified</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">} </span><span style=\"color: var(--shiki-token-keyword)\">else</span><span style=\"color: var(--shiki-color-text)\"> {</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-comment)\">// Request could not be verified</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">}</span></span>\\n<span></span>'\n                        })\n                    }),\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                        language: \"python\",\n                        code: 'from flask import request\\nimport hashlib\\nimport hmac\\n\\nsignature = request.headers.get(\"x-protocol-signature\")\\nhash = hmac.new(bytes(secret, \"ascii\"), bytes(payload, \"ascii\"), hashlib.sha256)\\n\\nif hash.hexdigest() == signature:\\n    # Request is verified\\nelse:\\n    # Request could not be verified\\n',\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                            className: \"language-python\",\n                            children: '<span><span style=\"color: var(--shiki-token-keyword)\">from</span><span style=\"color: var(--shiki-color-text)\"> flask </span><span style=\"color: var(--shiki-token-keyword)\">import</span><span style=\"color: var(--shiki-color-text)\"> request</span></span>\\n<span><span style=\"color: var(--shiki-token-keyword)\">import</span><span style=\"color: var(--shiki-color-text)\"> hashlib</span></span>\\n<span><span style=\"color: var(--shiki-token-keyword)\">import</span><span style=\"color: var(--shiki-color-text)\"> hmac</span></span>\\n<span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">signature </span><span style=\"color: var(--shiki-token-keyword)\">=</span><span style=\"color: var(--shiki-color-text)\"> request</span><span style=\"color: var(--shiki-token-punctuation)\">.</span><span style=\"color: var(--shiki-color-text)\">headers</span><span style=\"color: var(--shiki-token-punctuation)\">.</span><span style=\"color: var(--shiki-token-function)\">get</span><span style=\"color: var(--shiki-token-punctuation)\">(</span><span style=\"color: var(--shiki-token-string-expression)\">&quot;x-protocol-signature&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">)</span></span>\\n<span><span style=\"color: var(--shiki-token-function)\">hash</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-keyword)\">=</span><span style=\"color: var(--shiki-color-text)\"> hmac</span><span style=\"color: var(--shiki-token-punctuation)\">.</span><span style=\"color: var(--shiki-token-function)\">new</span><span style=\"color: var(--shiki-token-punctuation)\">(</span><span style=\"color: var(--shiki-token-constant)\">bytes</span><span style=\"color: var(--shiki-token-punctuation)\">(secret, </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;ascii&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">), </span><span style=\"color: var(--shiki-token-constant)\">bytes</span><span style=\"color: var(--shiki-token-punctuation)\">(payload, </span><span style=\"color: var(--shiki-token-string-expression)\">&quot;ascii&quot;</span><span style=\"color: var(--shiki-token-punctuation)\">), hashlib.sha256)</span></span>\\n<span></span>\\n<span><span style=\"color: var(--shiki-token-keyword)\">if</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-function)\">hash</span><span style=\"color: var(--shiki-token-punctuation)\">.</span><span style=\"color: var(--shiki-token-function)\">hexdigest</span><span style=\"color: var(--shiki-token-punctuation)\">()</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-keyword)\">==</span><span style=\"color: var(--shiki-color-text)\"> signature</span><span style=\"color: var(--shiki-token-punctuation)\">:</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-comment)\"># Request is verified</span></span>\\n<span><span style=\"color: var(--shiki-token-keyword)\">else</span><span style=\"color: var(--shiki-token-punctuation)\">:</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">    </span><span style=\"color: var(--shiki-token-comment)\"># Request could not be verified</span></span>\\n<span></span>'\n                        })\n                    }),\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n                        language: \"php\",\n                        code: \"$signature = $request['headers']['x-protocol-signature'];\\n$hash = hash_hmac('sha256', $payload, $secret);\\n\\nif (hash_equals($hash, $signature)) {\\n  // Request is verified\\n} else {\\n  // Request could not be verified\\n}\\n\",\n                        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                            className: \"language-php\",\n                            children: '<span><span style=\"color: var(--shiki-color-text)\">$signature </span><span style=\"color: var(--shiki-token-keyword)\">=</span><span style=\"color: var(--shiki-color-text)\"> $request[</span><span style=\"color: var(--shiki-token-string-expression)\">&#39;headers&#39;</span><span style=\"color: var(--shiki-color-text)\">][</span><span style=\"color: var(--shiki-token-string-expression)\">&#39;x-protocol-signature&#39;</span><span style=\"color: var(--shiki-color-text)\">];</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">$hash </span><span style=\"color: var(--shiki-token-keyword)\">=</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-function)\">hash_hmac</span><span style=\"color: var(--shiki-token-punctuation)\">(</span><span style=\"color: var(--shiki-token-string-expression)\">&#39;sha256&#39;</span><span style=\"color: var(--shiki-token-punctuation)\">,</span><span style=\"color: var(--shiki-token-function)\"> $payload</span><span style=\"color: var(--shiki-token-punctuation)\">,</span><span style=\"color: var(--shiki-token-function)\"> $secret</span><span style=\"color: var(--shiki-token-punctuation)\">)</span><span style=\"color: var(--shiki-color-text)\">;</span></span>\\n<span></span>\\n<span><span style=\"color: var(--shiki-token-keyword)\">if</span><span style=\"color: var(--shiki-color-text)\"> (</span><span style=\"color: var(--shiki-token-function)\">hash_equals</span><span style=\"color: var(--shiki-token-punctuation)\">(</span><span style=\"color: var(--shiki-token-function)\">$hash</span><span style=\"color: var(--shiki-token-punctuation)\">,</span><span style=\"color: var(--shiki-token-function)\"> $signature</span><span style=\"color: var(--shiki-token-punctuation)\">)</span><span style=\"color: var(--shiki-color-text)\">) {</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-comment)\">// Request is verified</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">} </span><span style=\"color: var(--shiki-token-keyword)\">else</span><span style=\"color: var(--shiki-color-text)\"> {</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-comment)\">// Request could not be verified</span></span>\\n<span><span style=\"color: var(--shiki-color-text)\">}</span></span>\\n<span></span>'\n                        })\n                    })\n                ]\n            }),\n            \"\\n\",\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.p, {\n                children: [\n                    \"If your generated signature matches the \",\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n                        children: \"x-protocol-signature\"\n                    }),\n                    \" header, you can be sure that the request was truly coming from Protocol. It's essential to keep your secret webhook key safe — otherwise, you can no longer be sure that a given webhook was sent by Protocol. Don't commit your secret webhook key to GitHub!\"\n                ]\n            })\n        ]\n    });\n}\nfunction MDXContent() {\n    let props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const { wrapper: MDXLayout  } = Object.assign({}, (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(), props.components);\n    return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MDXLayout, Object.assign({}, props, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_createMdxContent, props)\n    })) : _createMdxContent(props);\n}\n_c = MDXContent;\nvar __N_SSG = true;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MDXContent);\nfunction _missingMdxReference(id, component, place) {\n    throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"` in `/Users/mike/Projects/tailwindui-protocol/Zelar/src/pages/webhooks.mdx`\" : \"\"));\n}\nvar _c;\n$RefreshReg$(_c, \"MDXContent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvd2ViaG9va3MubWR4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBR0U7Ozs7MEJBRUY7Ozs7Ozs7OzBCQUVHOzs7OztvQkFFSDtvQkFBQUEsc0RBQUFBLENBQUFDLFlBQUFDLENBQUE7O2tDQUF5Sjs7b0JBQWdCO29CQUFBRixzREFBQUEsQ0FBQUMsWUFBQUMsQ0FBQTs7a0NBQXNDOztvQkFBcUI7aUJBQUE7Ozs7MEJBRXBPOzs7OzswQkFFRzs7Ozs7b0JBRUg7b0JBQUFGLHNEQUFBQSxDQUFBQyxZQUFBRSxJQUFBOzs7b0JBQXdFO2lCQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztvQkFheEU7b0JBQUFILHNEQUFBQSxDQUFBQyxZQUFBRSxJQUFBOzs7b0JBQWtEO29CQUFBSCxzREFBQUEsQ0FBQUMsWUFBQUUsSUFBQTs7O29CQUEwQztpQkFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBYXpGOzs7Ozs7Ozs7OztrREFPSzs7Ozs7O2tEQUdBOzs7Ozs7a0RBR0E7Ozs7OztrREFHQTs7Ozs7O2tEQUdBOzs7Ozs7a0RBR0E7Ozs7OztrREFHQTs7Ozs7O2tEQUdBOzs7Ozs7a0RBR0E7Ozs7OztrREFHQTs7Ozs7O2tEQUdBOzs7Ozs7a0RBR0E7Ozs7OztrREFHQTs7Ozs7O2tEQUdBOzs7Ozs7a0RBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFxQ0w7Ozs7O29CQUVIO29CQUFBSCxzREFBQUEsQ0FBQUMsWUFBQUUsSUFBQTs7O29CQUFzTTtpQkFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBMEN0TTtvQkFBQUgsc0RBQUFBLENBQUFDLFlBQUFFLElBQUE7OztvQkFBOEQ7aUJBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3BhZ2VzL3dlYmhvb2tzLm1keD8wYjYwIl0sIm5hbWVzIjpbIl9qc3giLCJfY29tcG9uZW50cyIsImEiLCJjb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/webhooks.mdx\n"));

/***/ })

});